# Contains all parts of scenes that are used to compose the master plot


# Scenes
# 1 - Hook
introduction
=> "The [agency.name.full]. [=>home_sweet_home]"
foreshadow 
=> "[=>subplot_intro] [=>subplot_problem] [=>subplot_solution]"
call 
=> "[=>get_job] [=>emote_negative] [=>job_intro]"

# 2 - Investigation
arrival_to_scene => "[=>arrive_site] [=>enter_site] [=>introduce(plot.site)]"
evidence_collection => "[=>create_demon(demon)][=>evidence]", let demon
hypothesis => ""

# 3 - Gear up
gear_up => ""
gear_problem => ""
pressure => ""

# 4 - Adaptation
new_situation => ""
plan_debate => ""
plan_decision => ""

# 5 - Plan fails
plan_mobilize => ""
plan_conflict => ""
plan_failed => ""

# 6 - New hope
no_hope => ""
desperation => ""
final_piece => ""

# 7 - Resolution
determination => ""
last_attempt => ""
save_success => ""

# 8 - Epilogue
clean_up => ""
look_back => ""
final_judgement => ""



# Phrases
arrive_site 
=> "I walk up to [=>site].", let plot.inside <- null
=> "I walk to [=>site].", let plot.inside <- null
=> "I arrive at [=>site].", let plot.inside <- null
caller 
=> "It's [=>employer]. [^=>name(plot.employer)] [plot.employer.is] in a hurry."
enter_site
=> "I go in.", plot.site.interior != null, let plot.inside
=> "I step inside.", plot.site.interior != null, let plot.inside
=> "I cross the fence.", plot.site.interior == null
=> "I inspect the lock. Basic model. A few minutes work. I'm in.", let plot.inside = plot.site.interior
evidence 
=> ""
get_job
=> "[=>phone_rings] [=>caller]", let plot.call = "phone"
=> "[=>letter_arrives]", let plot.call = "letter"
home_sweet_home
=> "It's not perfect but it's home."
=> "No place like home."
job_intro 
=> "Already it seems like a tough case. I don't savour the idea of visiting [=>site] again.", let plot.job = "job"
letter_arrives 
=> "I look back at the [=>letter_type] from [=>employer]."
phone_rings
=> "I'm throwing darts at the [=>hated_authority]'s picture when the phone rings."
=> "The silence is broken by the ringing of the telephone."

subplot_intro
=> "Wind howls through the broken [plot.sub.type].", plot.sub == "repair", plot.sub.air != null
=> "The [plot.sub.type] gurgles and clanks ominously.", plot.sub == "repair", plot.sub.water != null
=> "The [plot.sub.type] could use a little work.", plot.sub == "repair"
subplot_problem
=> "It will be bad if I can't get it fixed soon.", plot.sub == "repair"
subplot_solution
=> "Problem is, a detective's pay is not exactly luxurious. I need a job.", plot.sub.money != null